{"remainingRequest":"/Users/minhduc/Downloads/web-html/learn-vue/cv-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/minhduc/Downloads/web-html/learn-vue/cv-template/src/components/Section.vue?vue&type=template&id=8fbe9336&","dependencies":[{"path":"/Users/minhduc/Downloads/web-html/learn-vue/cv-template/src/components/Section.vue","mtime":1588831668996},{"path":"/Users/minhduc/Downloads/web-html/learn-vue/cv-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduc/Downloads/web-html/learn-vue/cv-template/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/minhduc/Downloads/web-html/learn-vue/cv-template/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/minhduc/Downloads/web-html/learn-vue/cv-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduc/Downloads/web-html/learn-vue/cv-template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}